# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python35-32:
        python.version: '3.5'
        python.arch: 'x86'
      Python35-64:
        python.version: '3.5'
        python.arch: 'x64'
      Python36-32:
        python.version: '3.6'
        python.arch: 'x86'
      Python36-64:
        python.version: '3.6'
        python.arch: 'x64'
      Python37-32:
        python.version: '3.7'
        python.arch: 'x86'
      Python37-64:
        python.version: '3.7'
        python.arch: 'x64'
    maxParallel: 6

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r test-requirements.txt
    displayName: 'Install dependencies'

  - script:
      pytest trio --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
