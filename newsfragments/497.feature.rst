New and improved APIs for inter-task communication:
:class:`trio.abc.SendChannel`, :class:`trio.abc.ReceiveChannel`, and
:func:`trio.open_memory_channel` (which replaces ``trio.Queue``). This
interface uses separate "send" and "receive" methods, for consistency
with other communication interfaces like :class:`~trio.abc.Stream`.
Also, the two objects can now be closed individually, making it much
easier to gracefully shut down a channel. Also, check out the nifty
``clone`` API to make it easy to manage fan-in scenarios. Also, the
API has been written to allow for future channel-like objects that
send objects across process boundaries. Also, it supports unbounded
buffering if you really need it. Also, help I can't stop writing also.
See :ref:`channels` for more details.
